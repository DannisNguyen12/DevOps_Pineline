name: DevOps Pipeline CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Lint with flake8 (if available)
      run: |
        # Install flake8 for linting
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Treat all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with unittest
      run: |
        python -m unittest test_calculator.py -v
    
    - name: Run calculator demo
      run: |
        python calculator.py

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Create distribution package
      run: |
        echo "Building application package..."
        mkdir -p dist
        cp calculator.py dist/
        cp test_calculator.py dist/
        cp requirements.txt dist/
        echo "Package created successfully in dist/ directory"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: calculator-package
        path: dist/
        retention-days: 30

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: calculator-package
        path: ./calculator-package
    
    - name: Deploy application
      run: |
        echo "Deploying calculator application..."
        ls -la ./calculator-package/
        echo "Application deployed successfully!"
        echo "This is a demo deployment step for the DevOps pipeline."